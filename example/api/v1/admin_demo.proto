syntax = "proto3";

package v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
//import "google/protobuf/timestamp.proto";
//import "validate/validate.proto"; use buf first
option go_package = "github.com/fzf-labs/kratos-gen/example/api/v1;v1";

//系统-用户
service AdminDemo {
  //系统-用户-创建一条数据
  rpc CreateAdminDemo(CreateAdminDemoReq) returns (CreateAdminDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_demo/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-更新一条数据
  rpc UpdateAdminDemo(UpdateAdminDemoReq) returns (UpdateAdminDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_demo/update"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-更新状态
  rpc UpdateAdminDemoStatus(UpdateAdminDemoStatusReq) returns (UpdateAdminDemoStatusReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_demo/update/status"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-删除多条数据
  rpc DeleteAdminDemo(DeleteAdminDemoReq) returns (DeleteAdminDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_demo/delete"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-单条数据查询
  rpc GetAdminDemoInfo(GetAdminDemoInfoReq) returns (GetAdminDemoInfoReply) {
    option (google.api.http) = {get: "/api/gorm_gen/v1/admin_demo/info"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-列表数据查询
  rpc GetAdminDemoList(GetAdminDemoListReq) returns (GetAdminDemoListReply) {
    option (google.api.http) = {get: "/api/gorm_gen/v1/admin_demo/list"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-用户-列表数据查询
  rpc GetAdminDemoListByCondition(GetAdminDemoListByConditionReq) returns (GetAdminDemoListByConditionReply) {
    option (google.api.http) = {get: "/api/gorm_gen/v1/admin_demo/list/condition"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
}
//系统-用户信息
message AdminDemoInfo {
  string id = 1; // 编号
	string username = 2; // 用户名
	string password = 3; // 密码
	string nickname = 4; // 昵称
	string avatar = 5; // 头像
	int32 gender = 6; // 0=保密 1=女 2=男
	string email = 7; // 邮件
	string mobile = 8; // 手机号
	string jobId = 9; // 岗位
	string deptId = 10; // 部门
	string roleIds = 11; // 角色集
	string salt = 12; // 盐值
	int32 status = 13; // 0=禁用 1=开启
	string motto = 14; // 个性签名
	string createdAt = 15; // 创建时间
	string updatedAt = 16; // 更新时间
}

//请求-系统-用户-创建一条数据
message CreateAdminDemoReq {
  string username = 1 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 用户名
	string password = 2 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 密码
	string nickname = 3 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 昵称
	string avatar = 4 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 255}]; // 头像
	int32 gender = 5 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=保密 1=女 2=男
	string email = 6 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 邮件
	string mobile = 7 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 15}]; // 手机号
	string jobId = 8 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 岗位
	string deptId = 9 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 部门
	string roleIds = 10 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1}]; // 角色集
	string salt = 11 [(buf.validate.field).string={min_len: 1, max_len: 32}]; // 盐值
	int32 status = 12 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
	string motto = 13 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 255}]; // 个性签名
}

//响应-系统-用户-创建一条数据
message CreateAdminDemoReply {
  	string id = 1; // 编号
}

//请求-系统-用户-更新一条数据
message UpdateAdminDemoReq {
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
	string username = 2 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 用户名
	string password = 3 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 密码
	string nickname = 4 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 昵称
	string avatar = 5 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 255}]; // 头像
	int32 gender = 6 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=保密 1=女 2=男
	string email = 7 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 邮件
	string mobile = 8 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 15}]; // 手机号
	string jobId = 9 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 岗位
	string deptId = 10 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 50}]; // 部门
	string roleIds = 11 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1}]; // 角色集
	string salt = 12 [(buf.validate.field).string={min_len: 1, max_len: 32}]; // 盐值
	int32 status = 13 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
	string motto = 14 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 255}]; // 个性签名
}

//响应-系统-用户-更新一条数据
message UpdateAdminDemoReply {}

//请求-系统-用户-更新状态
message UpdateAdminDemoStatusReq {
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
	int32 status = 2 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
}

//响应-系统-用户-更新状态
message UpdateAdminDemoStatusReply {}

//请求-系统-用户-删除多条数据
message DeleteAdminDemoReq {
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
}

//响应-系统-用户-删除多条数据
message DeleteAdminDemoReply {}

//请求-系统-用户-单条数据查询
message GetAdminDemoInfoReq {
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
}

//响应-系统-用户-单条数据查询
message GetAdminDemoInfoReply {
  AdminDemoInfo info = 1;
}

//请求-系统-用户-列表数据查询
message GetAdminDemoListReq {
  int32 page = 1; //页码
  int32 pageSize = 2; //页数
}

//响应-系统-用户-列表数据查询
message GetAdminDemoListReply {
  int32 total = 1; //总数
  repeated AdminDemoInfo list = 2; // 列表数据
}

//请求-系统-用户-列表数据查询
message GetAdminDemoListByConditionReq {
  int32 page = 1; //页码
  int32 pageSize = 2; //页数
}

//响应-系统-用户-列表数据查询
message GetAdminDemoListByConditionReply {
  int32 total = 1; //总数
  repeated AdminDemoInfo list = 2; // 列表数据
}